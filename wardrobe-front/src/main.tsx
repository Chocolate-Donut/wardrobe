/* import { StrictMode, } from 'react'
import { createRoot } from 'react-dom/client'
import './index.css'
import AppRoutes from './AppRoutes';
import 'antd/dist/reset.css'; // üëà —Å—Ç–∏–ª–∏ Ant Design
import { BrowserRouter } from 'react-router-dom'; // üëà –¥–æ–±–∞–≤—å
 */


/* // –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å-–≤–æ—Ä–∫–µ—Ä–∞
if ('serviceWorker' in navigator) {
  useEffect(() => {
    navigator.serviceWorker
      .register('/service-worker.js')  // –ü—É—Ç—å –∫ —Å–µ—Ä–≤–∏—Å-–≤–æ—Ä–∫–µ—Ä—É
      .then((registration) => {
        console.log('Service Worker —Ç—ñ—Ä–∫–µ–ª–¥—ñ:', registration);
      })
      .catch((error) => {
        console.log('Service Worker —Ç—ñ—Ä–∫–µ—É –∫–µ–∑—ñ–Ω–¥–µ “õ–∞—Ç–µ:', error);
      });
  }, []);
} */

/* 
if (import.meta.env.PROD && 'serviceWorker' in navigator) {
  window.addEventListener('load', () => {
    navigator.serviceWorker
      .register('/service-worker.js')
      .then((registration) => {
        console.log('‚úÖ Service Worker registered with scope:', registration.scope);
      })
      .catch((error) => {
        console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ Service Worker:', error);
      });
  });
} */


import { StrictMode } from 'react';
import { createRoot } from 'react-dom/client';
import './index.css';
import AppRoutes from './AppRoutes';
import { BrowserRouter } from 'react-router-dom';
import { ConfigProvider } from 'antd';
import 'antd/dist/reset.css';

/* import { registerSW } from 'virtual:pwa-register';


registerSW({ immediate: true }) */
createRoot(document.getElementById('root')!).render(
  <StrictMode>
    <BrowserRouter>
      <ConfigProvider>
        <AppRoutes />
      </ConfigProvider>
    </BrowserRouter>
  </StrictMode>,
);
